apiVersion: v1
kind: ConfigMap
metadata:
  name: ctf-app-config
  namespace: payment-processing
  annotations:
    vulnerability: "Secrets stored in ConfigMap instead of Kubernetes Secret"
    flag: "FLAG{k8s_configmap_with_secrets}"
data:
  # Database configuration
  database.url: "postgresql://prod_admin:ProdAdm1n!SecretP@ss@prod-db.ctf-training.internal:5432/ctf_training_prod"
  database.username: "prod_admin"
  database.password: "ProdAdm1n!SecretP@ss"
  database.flag: "FLAG{db_password_in_k8s_configmap}"
  
  # Redis configuration
  redis.host: "cache-redis.ctf-training.internal"
  redis.port: "6379"
  redis.password: "RedisCacheSecret123!"
  redis.flag: "FLAG{redis_password_configmap}"
  
  # MongoDB configuration
  mongodb.uri: "mongodb://user_service:UserDB2024!@user-db-01.ctf-training.internal:27017/user_database"
  mongodb.flag: "FLAG{mongodb_uri_in_configmap}"
  
  # AWS credentials
  aws.access.key.id: "AKIAIOSFODNN7EXAMPLE"
  aws.secret.access.key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
  aws.region: "ap-southeast-2"
  aws.flag: "FLAG{aws_keys_in_k8s_configmap}"
  
  # API keys
  stripe.secret.key: "sk_live_51HqmKH2eZvKYlo2C0FqKfdTs"
  sendgrid.api.key: "SG.xxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  github.token: "ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
  api.keys.flag: "FLAG{third_party_keys_configmap}"
  
  # JWT configuration
  jwt.secret: "super_secret_jwt_key_that_should_not_be_here"
  jwt.expiration: "86400"
  jwt.flag: "FLAG{jwt_secret_in_configmap}"
  
  # Application config file
  application.properties: |
    # Application configuration with embedded secrets
    spring.datasource.url=jdbc:postgresql://prod-db.ctf-training.internal:5432/ctf_training_prod
    spring.datasource.username=prod_admin
    spring.datasource.password=ProdAdm1n!SecretP@ss
    
    spring.redis.host=cache-redis.ctf-training.internal
    spring.redis.port=6379
    spring.redis.password=RedisCacheSecret123!
    
    aws.accessKeyId=AKIAIOSFODNN7EXAMPLE
    aws.secretKey=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    
    api.stripe.key=sk_live_51HqmKH2eZvKYlo2C0FqKfdTs
    
    # FLAG{full_config_file_in_configmap}
  
  # Database connection strings
  connection-strings.txt: |
    Production PostgreSQL:
    postgresql://prod_admin:ProdAdm1n!SecretP@ss@prod-db.ctf-training.internal:5432/ctf_training_prod
    
    Staging MySQL:
    mysql://staging_user:StagingPass2024!@staging-db.ctf-training.internal:3306/ctf_training_staging
    
    Analytics MongoDB:
    mongodb://analytics_read:Analytics123Read@analytics-cluster.ctf-training.internal:27017/analytics_db
    
    Session Redis:
    redis://default:RedisSessionP@ss2024@session-redis.ctf-training.internal:6379/0
    
    FLAG{connection_strings_in_k8s_configmap}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ctf-credentials
  namespace: payment-processing
  annotations:
    vulnerability: "Cloud provider credentials in ConfigMap"
    flag: "FLAG{cloud_credentials_k8s_configmap}"
data:
  aws-credentials: |
    [default]
    aws_access_key_id = AKIAIOSFODNN7EXAMPLE
    aws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    region = ap-southeast-2
    
    [production]
    aws_access_key_id = AKIAI44QH8DHBEXAMPLE
    aws_secret_access_key = je7MtGbClwBF/2Zp9Utk/h3yCo8nvbEXAMPLEKEY
    region = ap-southeast-2
    
    FLAG{aws_ini_file_in_configmap}
  
  gcp-service-account.json: |
    {
      "type": "service_account",
      "project_id": "ctf-training-project",
      "private_key_id": "key-id-123456",
      "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDPzDuVBH1aAnkK\nFLAG{gcp_key_in_k8s_configmap}\n-----END PRIVATE KEY-----",
      "client_email": "training@ctf-project.iam.gserviceaccount.com",
      "client_id": "123456789012345678901"
    }
  
  azure-credentials.json: |
    {
      "subscriptionId": "12345678-1234-1234-1234-123456789012",
      "tenantId": "87654321-4321-4321-4321-210987654321",
      "clientId": "11111111-1111-1111-1111-111111111111",
      "clientSecret": "AzureClientSecret~123456789.abcdefgh",
      "flag": "FLAG{azure_creds_in_configmap}"
    }
  
  kubeconfig: |
    apiVersion: v1
    kind: Config
    clusters:
    - cluster:
        certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
        server: https://k8s-cluster.example.com
      name: production-cluster
    contexts:
    - context:
        cluster: production-cluster
        user: admin
      name: production
    current-context: production
    users:
    - name: admin
      user:
        token: eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVz
    # FLAG{kubeconfig_with_token_in_configmap}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ctf-api-keys
  namespace: payment-processing
  annotations:
    vulnerability: "API keys and OAuth tokens in ConfigMap"
data:
  oauth-tokens.json: |
    {
      "github": {
        "client_id": "Iv1.1234567890abcdef",
        "client_secret": "1234567890abcdefghijklmnopqrstuvwxyz1234",
        "personal_token": "ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
      },
      "google": {
        "client_id": "123456789-abcdefghijklmnopqrstuvwxyz.apps.googleusercontent.com",
        "client_secret": "GOCSPX-1234567890abcdefghijk",
        "refresh_token": "1//0gBbCdEfGhIjKlMnOpQrStUvWxYz1234567890"
      },
      "slack": {
        "bot_token": "xoxb-1234567890-1234567890123-abcdefghijklmnopqrstuvw",
        "app_token": "xapp-1-A01234567-1234567890123-abcdefghijklmnop"
      },
      "flag": "FLAG{oauth_tokens_in_k8s_configmap}"
    }
  
  payment-gateways.env: |
    STRIPE_PUBLISHABLE_KEY=pk_live_51HqmKH2eZvKYlo2C
    STRIPE_SECRET_KEY=sk_live_51HqmKH2eZvKYlo2C0FqKfdTs
    STRIPE_WEBHOOK_SECRET=whsec_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghij
    
    PAYPAL_CLIENT_ID=AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVv
    PAYPAL_SECRET=EaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVv
    
    FLAG{payment_gateway_keys_configmap}
  
  communication-apis.env: |
    SENDGRID_API_KEY=SG.xxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    TWILIO_ACCOUNT_SID=AC1234567890abcdef1234567890abcdef
    TWILIO_AUTH_TOKEN=1234567890abcdef1234567890abcdef
    
    FLAG{communication_api_keys_configmap}